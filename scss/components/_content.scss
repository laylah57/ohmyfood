@import 'vars';
// CONTENT OF THE WHOLE APP

// HOMEPAGE_HOW THIS WORKS
.how-this-works {
  padding: 1rem 1rem 2rem 1rem;

  @media (min-width: $desktop) {
    padding: 1rem 10rem 2rem 10rem;
  }

  // Make capsules responsive
  .capsule-wrapper {
    @media (min-width: $tablet) {
      display: flex;
    }
    @media (min-width: $desktop) {
      padding: 0 15rem;
    }
  }

  .capsule {
    position: relative;
    vertical-align: baseline;
    background-color: $light-grey;
    border-radius: 1rem;
    border-style: none;
    box-shadow: .1rem .2rem .5rem rgba(black, .4);
    padding: 1rem;
    margin: 1rem;

    // Switch from column to row from tablet on
    @media (min-width: $tablet) {
      width: 35%;
    }

    & p {
      padding-inline-start: .5rem;
    }

    .number {
      color: white;
      text-align: center;
      font-size: .8rem;
      -webkit-text-stroke-width: thin;
      position: absolute;
      border-radius: 2rem;
      height: 1rem;
      width: 1rem;
      background-color: $primary;
      top: 18px;
      left: -6px;
    }

    // Centering icon and text + change layout according to display
    .step {
      display: flex;

      @media (min-width: $tablet) {
        flex-direction: column;
        align-items: center;

        > p {
            padding: 1rem .5rem 0 .5rem;
            text-align: center;
            justify-self: flex-end;
          }
      }

      .icon {
        width: 10%;
        padding: 0 .5rem;
        text-align: center;

        @media (min-width: $tablet) {
          width: initial;
        }
      }

      @media (min-width: $tablet) {
        width: initial;
      }

       & .fas {
        color: $dark-grey;
        transition: color 500ms;

        @media (min-width: $tablet) {
          font-size: 2rem;
        }
      }
    }
    // Purple background and icon on hover
    &:hover {
      background-color: rgba($primary, 0.15);

      .fas {
        color: $primary;
      }
    }
  }
}

// HOMEPAGE_RESTAURANT CARDS

// General wrapper - handling responsive layout margins
.restaurants {
  padding: 1rem 1rem 2rem 1rem;

  @media (min-width: $desktop) {
    padding: 1rem 10rem 2rem 10rem;
  }
}

// Divided next components to avoid excessive nesting

// Handling layout
.restaurant-cards-wrapper {
   @media (min-width: $tablet) {
     display: flex;
     flex-wrap: wrap;
   }

   @media (min-width: $desktop) {
     padding: 0 5rem;
   }

   // Switching layout from column to row
   .restaurant-cards-sub-wrapper {
     @media (min-width: $tablet) {
       width: 50%;
     }

     @media (min-width: $desktop) {
       width: 25%;
     }
   }
 }

// Cards in themselves
.card {
  margin-top: 1rem;
  border-radius: .5rem;
  box-shadow: .1rem .2rem .5rem rgba(black, .4);

  @media (min-width: $tablet) {
    margin: 1rem;
  }

  .card-description {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: .5rem;
  }
}

// MENU PAGES
// SECTION WRAPPER
.restaurant-menu {
  padding: 1rem;
  background-color: $light-grey;
  border-top-left-radius: 2.5rem;
  border-top-right-radius: 2.5rem;
  margin-top: -2.5rem;

  @media (max-width: $mobile-xs) {
    padding: .7rem;
  }
  @media (min-width: $mobile-lg) {
    padding: 1.2rem;
  }
  @media (min-width: $tablet) {
    display: flex;
    flex-direction: column;
  }

  .restaurant-name {
    display: flex;
    justify-content: space-between;
    align-items: baseline;
    padding: .5rem;

    h2 {
      font-weight: 100;
    }

    .fa-heart {
      font-size: 1.3rem;
    }
  }
}

// Title underline with ::after. Had to use supplementary <div> to handle absolute position
.title-decoration {
  position: relative;

  h3 {
    text-transform: uppercase;
    font-weight: 100;
    margin: 1rem 0 2rem 0;

    &::after {
      content: '';
      position: absolute;
      top: 1.5rem;
      left: 0;
      width: 2.5rem;
      height: 3px;
      background-color: $green;

      @media (min-width: $tablet) {
        top: 2.5rem;
      }
    }
  }
}

// Added supplementary wrapper to handle layout from tablet on
.menu-wrapper {
  @media (min-width: $tablet) {
    display: flex;
    flex-wrap: wrap;
  }
}

// Same.
.menu-items {
  @media (min-width: $tablet) {
    display: flex;
    flex-direction: column;
    width: 45%;
    margin: 0 1rem;
  }
  @media (min-width: $desktop){
    width: 30%;
  }
}

.menu-course {
  position: relative;
  margin-bottom: 2.5rem;
  // Made animation last longer so that the capsules don't appear too quickly
  animation: fade-in 1000ms ease-in;

  @media (min-width: $tablet) {
    margin-bottom: 1.5rem;
  }
  // Handling fade-in animation
  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  // Used first capsule style and then added another class to handle animation delay
  .capsule {
    //Overflow hidden to hide checkout icon
    overflow: hidden;
    position: relative;
    background-color: white;
    border-radius: 1rem;
    border-style: none;
    box-shadow: .1rem .2rem .5rem rgba(black, .4);
    margin-bottom: 1rem;
    padding: .7rem;
    animation: slide-up 500ms ease-in-out;
    animation-delay: 100ms;

    // Scaling capsules entrances.
    &.first {
      animation-delay: 200ms;
    }
    &.second {
      animation-delay: 300ms;
    }
    &.third {
      animation-delay: 400ms;
    }
    &.fourth {
      animation-delay: 500ms;
    }

    // Making the capsule slide up when page loads. Added supplementary fade-in effect to make it smooth.
    @keyframes slide-up {
      from {
        transform: translateY(2rem);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    & h4 {
      font-weight: bold;
      margin: 0 0 .2rem 0;
      // Had to make it extra small so that the price won't overlap the text.
      @media (max-width: $mobile-xs) {
        font-size: .9rem;
      }
    }

    @media (max-width: $mobile-xs) {
      p {
        font-size: .7rem;
      }
    }

    // Handling check animation. Base elements and then animation on hover (see below)
    .slide-in-animation {
      display: flex;
      // Absolute position so it can stick out of the capsule
      position: absolute;
      right: -3rem;
      top: 0;
      bottom: 0;
      transition: transform 500ms;

      & span {
        align-self: end;
        font-weight: bold;
        padding: 0 .7rem .7rem 0;

        @media (max-width: $mobile-xs) {
          font-size: .9rem;
        }
      }
    }

    .check-animation {
      border-radius: 0 0.95rem 0.95rem 0;
      background-color: $green;
      display: flex;
      justify-content: center;
      align-items: center;
      // Adding fixed width for translate effect
      width: 3rem;

      // check icon animation
      .check {
        color: white;
        text-align: center;
        font-size: 1.3rem;
        transition: transform 600ms ease-in-out;

        @media (max-width: $mobile-xs) {
          font-size: 1rem;
        }
      }
    }

    // Handling animation on hover: translate to make the div slide in, rotate to animate check icon
    &:hover {
      .slide-in-animation {
        transform: translateX(-3rem);
      }

      // Make the icon rotate on hover
      .check {
        transform: rotateZ(360deg);
      }
    }
  }
}
